{"version":3,"sources":["components/GlobalComponents.module.css","components/loginreg/Form.module.css","assets/images/game (1).gif","assets/images/game (2).gif","assets/images/game (3).gif","views/LoginReg.js","components/CustomizedButton.js","components/NavBar.js","components/Scoreboard.js","components/games/GameSelector.js","components/chat/Chat.js","components/timer/CountdownTimer.js","components/games/MathHead.js","components/games/WiseToMemorize.js","components/games/TypeFasterMaster.js","components/games/LittleBoxes.js","components/games/DontComeInsideMe.js","components/games/DropAFatShot.js","views/GameRoom.js","components/timer/PausableTimer.js","views/Lobby.js","App.js","redux/root-reducer.js","redux/store.js","serviceWorker.js","index.js","components/games/Games.module.css","components/chat/Chat.module.css","views/LoginReg.module.css","views/Views.module.css"],"names":["module","exports","LoginReg","connect","state","socket","userName","roomName","dispatch","Button","variant","onClick","event","emit","gameName","disconnect","type","navigate","admin","useEffect","undefined","length","Navbar","bg","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","navBarStyles","textWhite","flexColCen","useState","userList","setUserList","scoreList","setScoreList","on","data","scoreboard","scoreboardList","sbStyles","flexRowCen","join","Table","striped","bordered","hover","sbUser","map","user","i","key","cellWidth","sbScore","score","systemMsg","setSystemMsg","gameSelector","e","target","value","styles","onlyDiv","style","color","gameBtn","chatLog","setChatLog","userInput","setUserInput","chatStyles","chatBox","message","sentMessage","msg","recievedMessage","toLocaleUpperCase","onSubmit","preventDefault","now","Date","timestamp","placeholder","onChange","timeAllowed","setTimeAllowed","startDate","calculateTimeLeft","timeDifference","timeLeft","seconds","Math","floor","milliseconds","setTimeLeft","setTimeout","console","log","timerComponents","Object","keys","forEach","interval","push","formVisibility","setFormVisibility","resultsVisibility","setResultsVisibility","difficulty","setDifficulty","question","setQuestion","answer","setAnswer","resultMsg","setResultMsg","resultColor","setResultColor","timerStart","setTimerStart","setTotalTime","dispatchEvent","createdAt","totalTimeTaken","points","changeDifficulty","entirePage","d","name","activeBtn","inactiveBtn","questionTime","getTime","max","min","maxOp","minOp","operators","getRandomInt","maxNum","minNum","random","result","num1","num2","operator","generateProblem","createBtn","hiddenForm","visibleForm","answerTime","round","socketId","toFixed","userScore","randomWords","require","targetString","setTargetString","timer","setTimer","string","toString","substring","getSeconds","onPaste","backgroundColor","io","currentGame","top","big","contentRow","gameStyles","gameComponent","path","chatComponent","startTime","timerEvents","setTimerEvents","timeElapsed","timerLabel","start","stop","elapsedTime","uName","rName","rPassword","formState","setFormState","errorMsg","setErrorMsg","onChangeHandler","Carousel","Item","height","alt","src","textRed","inputRow","buttonRow","prettyBtn","rootReducer","action","store","createStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,QAAU,kCAAkC,WAAa,qCAAqC,WAAa,qCAAqC,UAAY,oCAAoC,OAAS,iCAAiC,QAAU,kCAAkC,UAAY,oCAAoC,UAAY,sC,mBCApWD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,QAAU,sBAAsB,UAAY,0B,wCCDlGD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,2KCuC5BC,I,yBCOAC,mBAPf,SAAyBC,GACrB,MAAO,CACHC,OAAQD,EAAMC,OACdC,SAAUF,EAAME,YAITH,EAvCU,SAAC,GAA8C,IAA5CE,EAA2C,EAA3CA,OAAQE,EAAmC,EAAnCA,SAAoBC,GAAe,EAAzBF,SAAyB,EAAfE,UAwBpD,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,QAdvB,SAAAC,GAEjBP,EAAOQ,KAAK,gBACR,CACIN,WACAO,SAJK,OAaT,uBACA,kBAACL,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,QAzB7B,SAAAC,GACXP,EAAOU,aAEPP,EAAS,CACLQ,KAAM,WAGVC,YAAS,OAkBL,c,iCCmDGd,mBAPf,SAAyBC,GACrB,MAAO,CACHE,SAAUF,EAAME,SAChBY,MAAOd,EAAMc,SAINf,EAtEA,SAAC,GAAqD,IAAnDE,EAAkD,EAAlDA,OAAkBE,GAAgC,EAA1CC,SAA0C,EAAhCD,UAAUD,EAAsB,EAAtBA,SAAsB,EAAZY,MAGpDC,qBAAW,iBACSC,GAAZd,GACAA,EAASe,OAAS,QACND,GAAZb,GACAA,EAASc,OAAS,IAClBJ,YAAS,OAGd,CAACZ,EAAQC,EAAUC,IAwBtB,OACI,oCACI,kBAACe,EAAA,EAAD,CAAQC,GAAG,YAAYb,QAAQ,QAC/B,kBAACY,EAAA,EAAOE,MAAR,CAAcC,KAAI,WAAMlB,IAAxB,kBACA,kBAACe,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACf,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,KAAf,SAOA,6BACI,uBAAGM,UAAWE,IAAaC,WAA3B,iBAAoD,+BAAM5B,EAAN,OAKxD,kBAAC,EAAD,CAAkByB,UAAWE,IAAaE,WACtC5B,SAAUA,U,QCJfJ,mBANf,SAAyBC,GACrB,MAAO,CACHE,SAAUF,EAAME,YAITH,EAzDI,SAAC,GAA8C,IAA5CE,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAAe,EAC3B4B,mBAAS,IADkB,mBACrDC,EADqD,KAC3CC,EAD2C,OAEzBF,mBAAS,IAFgB,mBAErDG,EAFqD,KAE1CC,EAF0C,KA4B7D,OAxBArB,qBAAW,YACU,OAAbb,GACAA,EAASe,OAAS,QACLD,IAAbd,GACa,OAAbC,GACAA,EAASc,OAAS,QACLD,IAAbb,IACAU,YAAS,KAGbZ,EAAOoC,GAAG,qBAAqB,SAAAC,GAC3BJ,EAAYI,EAAKL,UACjBG,EAAaE,EAAKH,WAElB/B,EAAS,CACLQ,KAAM,gBACN2B,WAAYD,EAAKE,eACjBP,SAAUK,EAAKL,SACfE,UAAWG,EAAKH,iBAIzB,CAAClC,EAAQE,EAAUD,IAGlB,oCAEA,yBAAKyB,UAAW,CAACc,IAASC,WAAYD,IAASX,WAAWa,KAAK,MAC/D,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACzC,QAAQ,QACtC,+BACY,wBAAIqB,UAAWc,IAASO,QAClBf,EAASgB,KAAK,SAACC,EAAMC,GAAP,OACZ,wBAAIC,IAAKD,EAAGxB,UAAWc,IAASY,WAAYH,OAGpD,wBAAIvB,UAAWc,IAASa,SACtBnB,EAAUc,KAAK,SAACM,EAAOJ,GAAR,OACT,wBAAIC,IAAKD,GAAII,EAAb,gB,gBCmEbxD,mBAPf,SAAyBC,GACrB,MAAO,CACHE,SAAUF,EAAME,SAChBY,MAAOd,EAAMc,SAINf,EAhHM,SAAC,GAAqD,IAEnEW,EAFgBT,EAAkD,EAAlDA,OAAQG,EAA0C,EAA1CA,SAAUF,EAAgC,EAAhCA,SAAiBC,GAAe,EAAtBW,MAAsB,EAAfX,UAAe,EAClC6B,mBAAS,IADyB,mBAC9DwB,EAD8D,KACnDC,EADmD,KAItE1C,qBAAW,WACPd,EAAOoC,GAAG,aAAa,SAAAC,GACnBmB,EAAanB,QAGlB,CAACrC,IAEJ,IAAMyD,EAAe,SAAAC,SACD3C,GAAZd,GACAA,EAASe,OAAS,QACND,GAAZb,GACAA,EAASc,OAAS,IAElBJ,YAAS,KAGbH,EAAWiD,EAAEC,OAAOC,MAEpBzD,EAAS,CACLQ,KAAM,cACNF,aAGJN,EAAS,CACLQ,KAAM,cACNT,aAGJF,EAAOQ,KAAK,gBACR,CACIN,WACAD,WACAQ,cAKZ,OACI,oCACA,yBAAKiB,UAAW,CAACmC,IAAO/B,WAAY+B,IAAOhC,UAAWgC,IAAOC,SAASpB,KAAK,MACvE,yBAAKhB,UAAWmC,IAAO/B,YACnB,wBAAIJ,UAAWmC,IAAOhC,WAAtB,YAA2C5B,EAA3C,KACA,wBAAIyB,UAAWmC,IAAOhC,WAAtB,oBAAmD3B,GAC/C,6BACJ,wBAAIwB,UAAWmC,IAAOhC,WAAtB,sBACI,6BACJ,uBAAGkC,MAAO,CAACC,MAAO,QAAST,GAC3B,yBAAK7B,UAAWmC,IAAOpB,YACnB,yBAAKf,UAAWmC,IAAO/B,YACnB,4BACIxB,QAASmD,EACTG,MAAM,WACNlC,UAAWmC,IAAOI,SAHtB,aAKU,KAiBd,yBAAKvC,UAAWmC,IAAO/B,YACnB,4BACIxB,QAASmD,EACTG,MAAM,mBACNlC,UAAWmC,IAAOI,SAHtB,sBAKU,Y,iBCZnBnE,mBANf,SAAyBC,GACvB,MAAO,CACHE,SAAUF,EAAME,YAIPH,EArEF,SAAC,GAAsC,IAAnCE,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,SAAgB,EACjB6B,mBAAS,IADQ,mBACzCmC,EADyC,KAChCC,EADgC,OAEbpC,mBAAS,IAFI,mBAEzCqC,EAFyC,KAE9BC,EAF8B,OAKXtC,oBAAS,GALE,6BAOjDjB,qBAAW,YACU,OAAbb,GACAA,EAASe,OAAS,QACLD,IAAbd,GACa,OAAbC,GACAA,EAASc,OAAS,QACLD,IAAbb,IACFU,YAAS,KAGbZ,EAAOoC,GAAG,iBAAiB,SAAAC,GACzB8B,EAAW9B,QAGZ,CAACrC,EAAQE,EAAUD,IAkBtB,OACE,yBAAK8D,MAAO,CAAC,OAAW,QACtB,yBAAKrC,UAAW4C,IAAWC,SACvBL,EAAQlB,KAAK,SAACwB,EAAStB,GAAV,OACbsB,EAAQvE,WAAaA,EACnB,yBAAKkD,IAAKD,EAAGxB,UAAW4C,IAAWG,aACjC,uBAAGV,MAAO,CAAC,gBAAoB,cAA/B,IAA+CS,EAAQE,IAAvD,MAEF,yBAAKvB,IAAKD,EAAGxB,UAAW4C,IAAWK,iBACnC,uBAAGZ,MAAO,CAAC,gBAAoB,WAA/B,IAA4CS,EAAQvE,SAAS2E,oBAA7D,MAAqFJ,EAAQE,UAInG,0BAAMG,SA7BM,SAAAnB,GACdA,EAAEoB,iBACF,IAAIC,EAAM,IAAIC,KAEdhF,EAAOQ,KAAK,SACV,CACEN,WACAD,WACAmE,YACAa,UAAWF,IAGfV,EAAa,MAkBT,2BAAO1D,KAAK,OACVuE,YAAY,oBACZtB,MAAOQ,EACPe,SAAU,SAAAzB,GAAC,OAAEW,EAAaX,EAAEC,OAAOC,UACnC,2BAAOjD,KAAK,SAASiD,MAAM,cCetB9D,mBAVf,SAAyBC,GACrB,MAAO,CACHC,OAAQD,EAAMC,OACdE,SAAUH,EAAMG,SAChBO,SAAUV,EAAMU,SAChBR,SAAUF,EAAME,YAKTH,EAtEQ,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAAa,EACK+B,mBAAS,GADd,mBAC3BqD,EAD2B,KACdC,EADc,OAECtD,mBAAS,IAAIiD,MAFd,mBAE3BM,EAF2B,KAI7BC,GAJ6B,KAIT,WACtB,IAAMC,EAAiBJ,IAAiB,IAAIJ,MAAUM,GAClDG,EAAW,GAYf,OAVKD,EAAiB,IAClBC,EAAW,CAIPC,QAASC,KAAKC,MAAQJ,EAAiB,IAAQ,IAC/CK,aAAiBL,EAAiB,MAInCC,IAlBwB,EAqBD1D,mBAAUwD,KArBT,mBAqB3BE,EArB2B,KAqBjBK,EArBiB,KAuBnChF,qBAAW,WACPiF,YAAY,WACRD,EAAaP,OACd,MAGPzE,qBAAW,WACPd,EAAOoC,GAAG,cAAc,SAAAC,GACpBgD,EAAehD,EAAK+C,aACpBY,QAAQC,IAAI,8BAA8B5D,EAAK+C,kBAGpD,CAACpF,IAEJ,IAAMkG,EAAkB,GAcxB,OAZAC,OAAOC,KAAKX,GAAUY,SAAQ,SAAAC,GACrBb,EAASa,KACVb,EAASa,GAAY,GAGzBJ,EAAgBK,KACZ,0BAAMpD,IAAKmD,GACNb,EAASa,GADd,IAC0BA,EAAU,SAMxC,yBAAK5E,UAAWmC,IAAOhC,WAClBqE,EAAgBlF,OACXkF,EACA,gDCoOHpG,mBANf,SAAyBC,GACrB,MAAO,CACHE,SAAUF,EAAME,YAITH,EAxRE,SAAC,GAAoC,IAAlCE,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAAe,EAIX6B,oBAAS,GAJE,gCAOHA,mBAAS,WAPN,mBAOzCyE,EAPyC,KAOzBC,EAPyB,OAQG1E,mBAAS,UARZ,mBAQzC2E,EARyC,KAQtBC,EARsB,OAWX5E,mBAAS,UAXE,mBAWzC6E,EAXyC,KAW7BC,EAX6B,OAYf9E,qBAZe,mBAYzC+E,EAZyC,KAY/BC,EAZ+B,OAanBhF,qBAbmB,mBAazCiF,EAbyC,KAajCC,EAbiC,OAgBblF,mBAAS,IAhBI,mBAgBzCqC,EAhByC,KAgB9BC,EAhB8B,OAiBbtC,mBAAS,IAjBI,mBAiBzCmF,EAjByC,KAiB9BC,EAjB8B,OAkBTpF,mBAAS,SAlBA,mBAkBzCqF,EAlByC,KAkB5BC,EAlB4B,OAqBXtF,mBAAS,IArBE,mBAqBzCuF,EArByC,KAqB7BC,EArB6B,OAsBbxF,mBAAS,GAtBI,mBAsB9ByF,GAtB8B,aAuBTzF,mBAAS,GAvBA,mBAuB5BsD,GAvB4B,WAyBjDvE,qBAAW,WACFb,GAAaC,GACdU,YAAS,KAGbZ,EAAOQ,KAAM,kBACT,CACIP,WACAC,WACAO,SAjCK,aAqCbT,EAAOoC,GAAG,eAAe,SAAAC,GACrBoF,cAAc,IACd7G,YAAS,IAAIV,EAAS,IAAImC,MAG9BrC,EAAOoC,GAAG,wBAAwB,SAAAC,GAC9BoE,EAAkB,UAClBA,EAAkB,WAClBE,EAAqB,UACrBI,EAAY1E,EAAKyE,UACjBG,EAAU5E,EAAK2E,QACfO,EAAclF,EAAKqF,WACnBrC,EAAehD,EAAK+C,gBAGxBpF,EAAOoC,GAAG,0BAA0B,SAAAC,GAChCoE,EAAkB,UAClBE,EAAqB,WACrBQ,EAAa,CACT9E,EAAKpC,SAAS,cACdoC,EAAKyE,SAAS,WAAWzE,EAAK2E,OAAO,IACrC,oBAAoB3E,EAAKsF,eAAe,WACxC,eAAetF,EAAKuF,OAAO,WAC3B,8BACJP,EAAe,eAGpB,CAACrH,EAAQE,EAAUD,EAhEL,aAmEjB,IACM4H,GAAmB,SAAAtH,GACrBsG,EAActG,EAAMoD,OAAOC,QA6I/B,OACI,yBAAKlC,UAAWmC,IAAOiE,YACnB,wBAAIpG,UAAWmC,IAAOhC,WAAtB,IAAkC,+BAAK5B,EAAL,KAAlC,MACI,6BACJ,wBAAIyB,UAAWmC,IAAOhC,WAAtB,aACI,6BAEJ,6BAtJiB,CAAE,OAAQ,SAAU,OAAQ,UAuJvBmB,KAAK,SAAC+E,EAAG7E,GAEvB,OACI,4BACI5C,QAASuH,GACT1E,IAAKD,EACL8E,KAAMD,EACNnE,MAAOmE,EACPrG,UAAYqG,IAAMnB,EAAa/C,IAAOoE,UAAYpE,IAAOqE,aACpDH,OAKjB,6BAEJ,4BAAQzH,QAjKK,SAACoD,GAElB,IACIyE,GADM,IAAInD,MACSoD,UACvBb,EAAcY,GACdX,EAAa,GAEbL,EAAa,IACbV,EAAkB,WAElB,IAOI4B,EACAC,EACAC,EACAC,EAVEC,EAAY,CAAE,IAAK,IAAK,QAExBC,EAAe,SAACC,EAAQC,GAE1B,OADUjD,KAAKC,MAAMD,KAAKkD,UAAYF,EAASC,GAAUA,IAiCzC,SAAfhC,IACDyB,EAAM,GACNC,EAAM,EACNC,EAAQ,EACRC,EAAQ,GAEQ,WAAf5B,IACDyB,EAAM,GACNC,EAAM,EACNC,EAAQ,EACRC,EAAQ,GAEQ,SAAf5B,IACDyB,EAAM,IACNC,EAAM,GACNC,EAAQ,EACRC,EAAQ,GAEQ,WAAf5B,GACDyB,EAAM,KACNC,EAAM,GACNC,EAAQ,EACRC,EAAQ,GAER3B,EAAc,QAjDM,SAACwB,EAAKC,EAAKC,EAAOC,GACtC,IAGIM,EAHEC,EAAOL,EAAaL,EAAKC,GACzBU,EAAON,EAAaL,EAAKC,GACzBW,EAAWR,EAAUC,EAAaH,EAAOC,IAE9B,MAAbS,IACAH,EAASC,EAAKC,GAED,MAAbC,IACAH,EAASC,EAAKC,GAED,SAAbC,IACAH,EAASC,EAAKC,GAGlBhJ,EAAOQ,KAAK,0BACR,CACIsG,SAAWiC,EAAK,IAAIE,EAAS,IAAID,EACjChC,OAAQ8B,EACRpB,UAAWS,EACX/C,YAAa,MA+BzB8D,CAAgBb,EAAKC,EAAKC,EAAOC,IAyFE9G,UAAWmC,IAAOsF,WAAY,UAAYvC,EAAa,YAClF,6BAEJ,yBAAKlF,UAA8B,WAAnB8E,EACV3C,IAAOuF,WACPvF,IAAOwF,aACgB,WAAnB7C,EACI,kEACA,kBAAC,EAAD,MACN,uBAAG9E,UAAWmC,IAAOhC,WAAYiF,GAC7B,6BACA,6BACA,6BACR,0BAAMjC,SAlGC,SAACtE,GAGhB,GAFAA,EAAMuE,iBAEDV,GAAa4C,EAAS,CAEvB,IACIsC,GADM,IAAItE,MACOoD,UACjBT,EAAiBhC,KAAK4D,OAAQD,GAAehC,GAAa,IAC1DM,EAAS,GAAGD,EAehB3B,QAAQC,IAAI,WAAW2B,GACvBL,EAAc,IAGdJ,EAAa,CACT,gEACAL,EAAS,eAAe1C,EAAU,IAClC,cAAcwD,EAAO,WACrB,eAAeD,EAAe,aAClCN,EAAe,SAGfhD,EAAa,IACboC,EAAkB,UAGlBzG,EAAOQ,KAAK,yBACR,CACIgJ,SAAUxJ,EAAOwB,GACjBvB,WACAC,WACA4G,WACAE,SACAW,iBACAC,OAAQA,EAAO6B,QAAQ,UAK/BtC,EAAa,CACT,SACAL,EAAW,mBAAmB1C,EAAU,MAC5CiD,EAAe,OAEnBhD,EAAa,IACbsC,EAAqB,aAyCT,2BACIhG,KAAK,OACLuE,YAAY,wBACZtB,MAAOQ,EACPe,SAAU,SAAAzB,GAAC,OAAEW,EAAaX,EAAEC,OAAOC,UACvC,2BAAOjD,KAAK,SAASiD,MAAM,aAG/B,6BAEJ,yBAAKlC,UAAiC,WAAtBgF,EACV7C,IAAOuF,WACPvF,IAAOwF,aACRnC,EAAUlG,OAAS,GAAKkG,EAAUlE,KAAK,SAAC0B,EAAKxB,GAAN,OACpC,oCACA,uBAAGa,MAAO,CAACC,MAAOoD,GAAcjE,IAAKD,GAAIwB,GACrC,sCC1OT5E,mBARf,SAAyBC,GACrB,MAAO,CACHC,OAAQD,EAAMC,OACdC,SAAUF,EAAME,SAChByJ,UAAW3J,EAAM2J,aAIV5J,EArCQ,SAAC,GAAiB,EAAfI,SAAgB,IAAD,EASP6B,mBAAS,MATF,gCAUDA,mBAAS,KAVR,6BAoBrC,OACI,oCACA,yBAAKL,UAAWmC,IAAOiE,YACnB,wBAAIpG,UAAWmC,IAAOhC,WAAtB,yBClBR8H,EAAcC,EAAQ,KAoPX9J,mBANf,SAAyBC,GACrB,MAAO,CACHE,SAAUF,EAAME,YAITH,EAlPU,SAAC,GAAsC,IAAnCE,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,SAAgB,EAIrB6B,oBAAS,GAJY,gCAObA,mBAAS,WAPI,mBAOnDyE,EAPmD,KAOnCC,EAPmC,OAQP1E,mBAAS,UARF,mBAQnD2E,EARmD,KAQhCC,EARgC,OAWrB5E,mBAAS,QAXY,mBAWnD6E,EAXmD,KAWvCC,EAXuC,OAYjB9E,mBAAS,IAZQ,mBAYnD8H,EAZmD,KAYrCC,EAZqC,OAavB/H,mBAAS,IAbc,mBAanDqC,EAbmD,KAaxCC,EAbwC,OAgBvBtC,mBAAS,IAhBc,mBAgBnDmF,EAhBmD,KAgBxCC,EAhBwC,OAiBnBpF,mBAAS,SAjBU,mBAiBnDqF,EAjBmD,KAiBtCC,EAjBsC,OAoB/BtF,mBAAS,IApBsB,mBAoBnDgI,EApBmD,KAoB5CC,EApB4C,OAqBvBjI,mBAAS,GArBc,mBAqBxCyF,GArBwC,WAuB3D1G,qBAAW,WACFb,GAAaC,GACdU,YAAS,KAGbZ,EAAOQ,KAAK,oBACR,CACIP,WACAC,WACAO,SA/BK,qBAmCbT,EAAOoC,GAAG,eAAe,SAAAC,GACrBzB,YAAS,IAAIV,EAAS,IAAImC,MAG9BrC,EAAOoC,GAAG,0BAA0B,SAAAC,GAChC2D,QAAQC,IAAI,oCAAoC5D,EAAKsB,QACrD8C,EAAkB,UAClBA,EAAkB,WAClBE,EAAqB,UACrBmD,EAAgBzH,EAAKsB,QACrBqG,EAAS3H,EAAKqF,cAGlB1H,EAAOoC,GAAG,4BAA4B,SAAAC,GAClC2D,QAAQC,IAAI,gCAAgC5D,EAAKpC,UACjDwG,EAAkB,UAClBE,EAAqB,WACrBQ,EAAa,CACT9E,EAAKpC,SAAS,cACd,mBAAoBoC,EAAKsF,eAAiB,WAC1C,eAAetF,EAAKuF,OAAO,WAC3B,8BACJP,EAAe,eAGpB,CAACrH,EAAQE,EAAUD,EA5DL,qBA+DjB,IACM4H,EAAmB,SAAAtH,GACrBsG,EAActG,EAAMoD,OAAOC,QA4G/B,OACI,oCACA,yBAAKlC,UAAWmC,IAAOiE,YAEnB,wBAAIpG,UAAWmC,IAAOhC,WAAtB,IAAkC,+BAAK5B,EAAL,KAAlC,MAEI,6BACJ,wBAAKyB,UAAWmC,IAAOhC,WAAvB,sBACI,6BACJ,6BAvHiB,CAAC,OAAQ,SAAU,OAAQ,UAwHtBmB,KAAK,SAAC+E,EAAG7E,GAEvB,OACI,4BACI5C,QAASuH,EACT1E,IAAKD,EACL8E,KAAMD,EACNnE,MAAOmE,EACPrG,UAAYqG,GAAKnB,EAAa/C,IAAOoE,UAAYpE,IAAOqE,aACvDH,OAKb,6BAEJ,4BAAQzH,QAlIK,WAEjB,IAQI2J,EAPA9B,GADM,IAAInD,MACSoD,UACvB4B,EAAS7B,GACTX,EAAa,GAEbL,EAAa,IACbV,EAAkB,WAGE,SAAfG,IACDqD,EAASN,EAAY,IAEN,UAAd/C,IACDqD,EAASN,EAAY,IAEN,QAAd/C,IACDqD,EAASN,EAAY,IAEN,UAAd/C,IAEDqD,EAAStE,KAAKkD,SAASqB,SAAS,IAAIC,UAAU,EAAG,IAAMR,EAAY,GAAGjH,KAAK,IAC3EsD,QAAQC,IAAI,kBAAkBgE,IAGlCjK,EAAOQ,KAAK,4BACZ,CACImD,OAAQsG,EACRvC,UAAWS,KAqGoBzG,UAAWmC,IAAOsF,WAAY,UAAYvC,EAAa,YAClF,6BACJ,yBAAKlF,UAA6B,UAAlB8E,EACV3C,IAAOuF,WACPvF,IAAOwF,aACL,uBAAG3H,UAAWmC,IAAOhC,WAArB,IAAkCgI,EAAlC,KACI,6BACA,6BACA,6BACR,0BAAMhF,SAzGC,SAACtE,GAGhB,GAFAA,EAAMuE,iBAEa,UAAd8B,GAA0BxC,GAAayF,EAAanH,KAAK,IAAM,CAChE,IAAIqC,EAAM,IAAIC,KACVsE,EAAavE,EAAIqD,UAAWrD,EAAIqF,aAAcF,WAClD,IAAIvC,EAAiBhC,KAAK4D,OAAQD,GAAeS,GAAQ,IACrDnC,EAAS,KAAM0B,GAAeS,GAAO,IACzCC,EAAS,IAET7C,EAAa,CACT,wEACA,cAAcS,EAAO,WACrB,eAAeD,EAAe,aAClCN,EAAe,SAGfhD,EAAa,IACboC,EAAkB,UAElBzG,EAAOQ,KAAK,2BACR,CACIgJ,SAAUxJ,EAAOwB,GACjBvB,WACAC,WACA+J,OAAQJ,EACRlC,iBACAC,OAAQA,EAAO6B,QAAQ,KAKnC,GAAmB,UAAd7C,GAA0BxC,GAAayF,EAAanH,KAAK,IAAK,CAC/D,IACI4G,GADM,IAAItE,MACOoD,UACjBT,EAAiBhC,KAAK4D,OAAQD,GAAeS,GAAQ,IACrDnC,EAAS,KAAM0B,GAAeS,GAAO,IACzCC,EAAS,IAET7C,EAAa,CACT,gEACA,cAAcS,EAAO,WACrB,eAAeD,EAAe,aAClCN,EAAe,SAGfhD,EAAa,IACboC,EAAkB,UAElBzG,EAAOQ,KAAK,2BACR,CACIgJ,SAAUxJ,EAAOwB,GACjBvB,WACAC,WACA+J,OAAQJ,EACRlC,iBACAC,gBAIRT,EAAa,CACT,SACA,6BAEJE,EAAe,OAEnBhD,EAAa,IACbsC,EAAqB,aAuCT,2BACIhG,KAAK,OACLuE,YAAY,mBACZtB,MAAOQ,EACPe,SAAW,SAAAzB,GAAC,OAAIW,EAAaX,EAAEC,OAAOC,QACtCyG,QAAW,SAAA3G,GAAC,OAAGA,EAAEoB,oBAErB,4BAAQkD,KAAK,eAAejE,MAAO,CAACuG,gBAAiB,QAAS3J,KAAK,UAAnE,SAGJ,6BACJ,yBAAKe,UAAgC,UAArBgF,EACV7C,IAAOuF,WACPvF,IAAOwF,aACRnC,EAAUlG,OAAS,GAAKkG,EAAUlE,KAAK,SAAC0B,EAAKxB,GAAN,OACpC,oCACA,uBAAGa,MAAO,CAACC,MAAOoD,GAAcjE,IAAKD,GAAIwB,GACrC,uCChNT5E,mBARf,SAAyBC,GACrB,MAAO,CACHC,OAAQD,EAAMC,OACdC,SAAUF,EAAME,SAChByJ,UAAW3J,EAAM2J,aAIV5J,EA1BK,SAAC,GAAiB,EAAfI,SASnB,OACI,oCACA,yBAAKwB,UAAWmC,IAAOiE,YACnB,wBAAIpG,UAAWmC,IAAOhC,WAAtB,uBCUG/B,mBANf,SAAyBC,GACrB,MAAO,CACHE,SAAUF,EAAME,YAITH,EAtBU,SAAC,GAAiB,EAAfI,SAQxB,OACI,oCACA,yBAAKwB,UAAWmC,IAAOiE,YACnB,wBAAIpG,UAAWmC,IAAOhC,WAAtB,8BCaG/B,mBANf,SAAyBC,GACrB,MAAO,CACHE,SAAUF,EAAME,YAITH,EAxBM,SAAC,GAAiB,EAAfI,SASpB,OACI,oCACA,yBAAKwB,UAAWmC,IAAOiE,YACnB,wBAAIpG,UAAWmC,IAAOhC,WAAtB,0B,iCCgLG/B,mBAPf,SAAyBC,GACrB,MAAO,CACHE,SAAUF,EAAME,SAChBY,MAAOd,EAAMc,SAINf,EAtKE,SAAC,GAAsC,IAApCK,EAAmC,EAAnCA,SAAUF,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAAe,EAIhC6B,oBAAU,kBAAMwI,IAAG,4BAA9BvK,EAJ2C,sBAQb+B,oBAAS,GARI,6BAoHnD,OA1GAjB,qBAAW,WACPd,EAAOQ,KAAK,kBACR,CACIP,WACAC,WACAO,SAdK,MAkBbN,EAAS,CACLQ,KAAM,YACNX,WAGJG,EAAS,CACLQ,KAAM,cACNV,aAGJE,EAAS,CACLQ,KAAM,cACNT,aAGJC,EAAS,CACLQ,KAAM,cACNF,SAnCS,QA0Dd,IAEHK,qBAAW,WAkDP,OAjDiB,OAAbb,GACAA,EAASe,OAAS,QACLD,IAAbd,GACa,OAAbC,GACAA,EAASc,OAAS,QACLD,IAAbb,IAEAU,YAAS,KAQbZ,EAAOoC,GAAG,YAAY,SAAAvB,GAClBmF,QAAQC,IAAIpF,GACZV,EAAS,CACLQ,KAAM,WACNE,aAIRb,EAAOQ,KAAK,gBACR,CACIP,WACAC,aAIRF,EAAOQ,KAAK,mBACR,CACIP,WACAC,aAIRF,EAAOoC,GAAG,eAAe,SAAAC,GACrBlC,EAAS,CACLQ,KAAM,WACNE,MAAOwB,EAAK2F,OAEhBpH,YAAS,IAAIV,EAAS,IAAImC,EAAKmI,gBAGnCxK,EAAOoC,GAAG,kBAAkB,SAAAC,GACxBzB,YAAS,IAAIyB,EAAKnC,SAAS,IAAImC,EAAK5B,aAGjC,WACHT,EAAOU,gBAEZ,CAACV,EAAQC,EAAUC,IAGlB,oCACA,kBAAC,IAAD,CAAMuK,KAAG,EAACC,KAAG,GACb,kBAAC,EAAD,CAAQ1K,OAAQA,EACZE,SAAUA,IACd,kBAAC,EAAD,CAAYF,OAAQA,EAChBE,SAAUA,IACd,yBAAKwB,UAAWmC,IAAO8G,YACnB,yBAAKjJ,UAAWkJ,IAAWC,eACvB,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAcC,KAAK,IACf9K,OAAQA,EACRE,SAAUA,IACd,kBAAC,EAAD,CAAU4K,KAAK,YACX9K,OAAQA,EACRE,SAAUA,IACd,kBAAC,EAAD,CAAkB4K,KAAK,oBACnB9K,OAAQA,EACRE,SAAUA,IACd,kBAAC,EAAD,CAAgB4K,KAAK,kBACjB9K,OAAQA,EACRE,SAAUA,IACd,kBAAC,EAAD,CAAa4K,KAAK,eACd9K,OAAQA,EACRE,SAAUA,IACd,kBAAC,EAAD,CAAkB4K,KAAK,oBACnB9K,OAAQA,EACRE,SAAUA,IACd,kBAAC,EAAD,CAAc4K,KAAK,gBACf9K,OAAQA,EACRE,SAAUA,MAGtB,yBAAKwB,UAAW4C,IAAWyG,eACvB,kBAAC,EAAD,CAAM/K,OAAQA,EACVE,SAAYA,W,QC/GjBJ,aAXf,SAAyBC,GACrB,MAAO,CACHC,OAAQD,EAAMC,OACdE,SAAUH,EAAMG,SAChBO,SAAUV,EAAMU,SAChBR,SAAUF,EAAME,YAMTH,EA7DO,SAAC,GAAwD,EAAtDE,OAAsD,EAA9CE,SAA8C,EAApCO,SAAoC,EAA1BR,SAA0B,EAAhB+K,UAAiB,IAAD,EACnCjJ,mBAAS,IAD0B,mBACnEkJ,EADmE,KACtDC,EADsD,KAGvEC,EAAc,EA4BZC,EAAaH,EAAYjK,OAAQ,GAAK,EACtC,QACA,OAEN,OACI,yBAAKU,UAAU,eACX,uBACIqC,MAAO,CAAC,MAAS,UAjCT,WAChB,IAAI,IAAIb,EAAE,EAAGA,EAAE+H,EAAYjK,OAAQkC,GAAG,EAAG,CACrC,IAAMmI,EAAQJ,EAAY/H,GAEpBoI,EAAOL,EAAY/H,EAAE,IAAM,IAAI8B,KAErCmG,GAAiBG,EAAOD,EAG5B,OAASF,EAAY,IAAO,WAyBdI,IAEV,4BACIjL,QAlBU,SAAAoD,GAClBwH,EAAe,GAAD,mBACPD,GADO,CAEV,IAAIjG,SAgBAjB,MAAO,CAAC,MAAS,UACZqH,OAiBNtL,I,QCqFAA,mBANf,SAAyBC,GACrB,MAAO,CACHE,SAAUF,EAAME,YAITH,EA3HD,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,SAAe,EACQ4B,mBAAS,CACzCyJ,MAAO,GACPC,MAAO,GACPC,UAAW,KAJa,mBACpBC,EADoB,KACTC,EADS,OAMM7J,mBAAU,IANhB,mBAMpB8J,EANoB,KAMVC,EANU,KAQtBC,EAAkB,SAAArI,GACpBkI,EAAa,eACND,EADK,eAEPjI,EAAEC,OAAOqE,KAAOtE,EAAEC,OAAOC,UA2BlC,OACI,oCACA,yBAAKlC,UAAW,CAACmC,IAAOhC,UAAWgC,IAAOC,SAASpB,KAAK,MACpD,6BACA,yBAAKhB,UAAWmC,IAAO/B,YACvB,kBAACkK,EAAA,EAAD,KACI,kBAACA,EAAA,EAASC,KAAV,KACI,yBAAKC,OAAO,QAAQC,IAAI,oBAAoBC,IAAKxC,EAAQ,QAE7D,kBAACoC,EAAA,EAASC,KAAV,KACI,yBAAKC,OAAO,QAAQC,IAAI,WAAWC,IAAKxC,EAAQ,QAEpD,kBAACoC,EAAA,EAASC,KAAV,KACI,yBAAKC,OAAO,QAAQC,IAAI,mBAAmBC,IAAKxC,EAAQ,SAGhE,6BACA,8BAGA,yBAAKlI,UAAW,CAACmC,IAAOhC,UAAWgC,IAAOC,QAASD,IAAO/B,YAAYY,KAAK,MAC3E,6DAEA,uBAAGhB,UAAWmC,IAAOwI,SAArB,4EACI,6BAJJ,IAIU,6BACV,0BAAM3K,UAAWmC,IAAO/B,WAAY+C,SAhD1B,SAAAnB,GACdA,EAAEoB,iBACE6G,EAAUH,MAAMxK,OAAO,GAAK2K,EAAUF,MAAMzK,OAAO,GACnDb,EACI,CACAQ,KAAM,cACNV,SAAU0L,EAAUH,QAGxBrL,EACI,CACAQ,KAAM,cACNT,SAAUyL,EAAUF,QAGxB7K,YAAS,IAAI+K,EAAUF,QAEvBK,EAAY,4CAiCR,uBAAG/H,MAAO,CAACC,MAAO,QAAS6H,GAE3B,yBAAKnK,UAAWmC,IAAOyI,UACnB,8CACA,2BACI3L,KAAK,OACLqH,KAAK,QACLpE,MAAO+H,EAAUH,MACjBrG,SAAU4G,KAEd,6BACJ,yBAAKrK,UAAWmC,IAAOyI,UACnB,6CACA,2BACI3L,KAAK,OACLqH,KAAK,QACLpE,MAAO+H,EAAUF,MACjBtG,SAAU4G,KAEd,6BACJ,yBAAKrK,UAAWmC,IAAOyI,UACnB,4CACA,2BACI3L,KAAK,WACLqH,KAAK,YACLpE,MAAO+H,EAAUD,UACjBvG,SAAU4G,KAEd,6BACJ,yBAAKrK,UAAWmC,IAAO0I,WACnB,4BACI5L,KAAK,SACLqH,KAAM,aACNpE,MAAM,YACNlC,UAAWmC,IAAO2I,WAJtB,cAOA,4BACI7L,KAAK,SACLqH,KAAM,aACNpE,MAAM,aACNlC,UAAWmC,IAAO2I,WAJtB,uBChGL1M,mBANf,SAAyBC,GACvB,MAAO,KAKMD,EAnBf,YAGE,OAHiC,EAAZK,SAInB,oCACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAO2K,KAAK,MACZ,kBAAC,EAAD,CAAUA,KAAK,sB,QCwBR2B,EA/CK,SAAE1M,EAAO2M,GACzB,OAAOA,EAAO/L,MACV,IAAK,YACD,OAAO,eACJZ,EADH,CAEAC,OAAQ0M,EAAO1M,SAEnB,IAAK,WACD,OAAO,eACAD,EADP,CAEIc,MAAO6L,EAAO7L,QAEtB,IAAK,cACD,OAAO,eACAd,EADP,CAEIG,SAAUwM,EAAOxM,WAEzB,IAAK,cACD,sBACOH,EADP,CAEIU,SAAWiM,EAAOjM,WAE1B,IAAK,cACD,OAAO,eACJV,EADH,CAEAE,SAAUyM,EAAOzM,WAErB,IAAK,gBACD,sBACOF,EADP,CAEIuC,WAAaoK,EAAOpK,WACpBN,SAAU0K,EAAO1K,SACjBE,UAAWwK,EAAOxK,YAE1B,IAAK,SACD,OAAO,eACAnC,EADP,CAEIC,OAAQ,KACRC,SAAU,KACVC,SAAU,KACVO,SAAU,OAElB,QACI,OAAOV,IC9BJ4M,EAFDC,YAAaH,EARN,CACjBzM,OAAQ,KACRE,SAAU,KACVW,MAAO,KACPZ,SAAU,KACVQ,SAAW,OCIToM,G,OAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7N,QACfuN,UAAUC,cAAcQ,YAI1B/H,QAAQC,IACN,iHAKEoH,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlB1H,QAAQC,IAAI,sCAGRoH,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAAAC,GACLnI,QAAQmI,MAAM,4CAA6CA,MCjFjEC,IAASC,OACL,kBAAC,IAAD,CAAU1B,MAAOA,GACb,kBAAC,EAAD,OAEF2B,SAASC,eAAe,gBDGvB,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,GAAwB1B,OAAOC,SAAS5L,MACpDsN,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,GAAN,sBAEP5B,IAgEV,SAAiCO,EAAOC,GAEtCuB,MAAMxB,EAAO,CACXyB,QAAS,CAAE,iBAAkB,YAE5BpB,MAAK,SAAAqB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7BV,OAAOC,SAASqC,eAKpBlC,EAAgBC,EAAOC,MAG1Ba,OAAM,WACLlI,QAAQC,IACN,oEAvFAqJ,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAM1B,MAAK,WACjCzH,QAAQC,IACN,iHAMJkH,EAAgBC,EAAOC,OC5B/BE,I,kBCrBA5N,EAAOC,QAAU,CAAC,WAAa,0BAA0B,WAAa,0BAA0B,WAAa,0BAA0B,QAAU,uBAAuB,cAAgB,6BAA6B,QAAU,uBAAuB,UAAY,yBAAyB,QAAU,uBAAuB,UAAY,yBAAyB,MAAQ,qBAAqB,UAAY,yBAAyB,YAAc,2BAA2B,UAAY,yBAAyB,WAAa,0BAA0B,YAAc,6B,mBCAtiBD,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,QAAU,sBAAsB,YAAc,0BAA0B,YAAc,0BAA0B,SAAW,uBAAuB,OAAS,qBAAqB,QAAU,sBAAsB,gBAAkB,8BAA8B,YAAc,0BAA0B,UAAY,wBAAwB,UAAY,wBAAwB,MAAQ,oBAAoB,YAAc,0BAA0B,KAAO,qB,mBCAzfD,EAAOC,QAAU,CAAC,WAAa,6BAA6B,SAAW,2BAA2B,OAAS,yBAAyB,QAAU,4B,kBCA9ID,EAAOC,QAAU,CAAC,WAAa,0BAA0B,WAAa,0BAA0B,WAAa,0BAA0B,QAAU,uBAAuB,UAAY,yBAAyB,QAAU,uBAAuB,IAAM,mBAAmB,UAAY,yBAAyB,MAAQ,qBAAqB,UAAY,yBAAyB,YAAc,2BAA2B,UAAY,yBAAyB,SAAW,wBAAwB,UAAY,2B","file":"static/js/main.ba30149d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexRow\":\"GlobalComponents_flexRow__2JSrw\",\"flexRowCen\":\"GlobalComponents_flexRowCen__22HLQ\",\"flexColCen\":\"GlobalComponents_flexColCen__32gkU\",\"textWhite\":\"GlobalComponents_textWhite__7iibq\",\"sbUser\":\"GlobalComponents_sbUser__LGtwO\",\"sbScore\":\"GlobalComponents_sbScore__6Qhxn\",\"cellWidth\":\"GlobalComponents_cellWidth__zGtay\",\"navButton\":\"GlobalComponents_navButton__2jhmB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Form_loginForm__3jRnC\",\"formRow\":\"Form_formRow__3Supy\",\"rowCenter\":\"Form_rowCenter__1Asse\"};","module.exports = __webpack_public_path__ + \"static/media/game (1).87e5da07.gif\";","module.exports = __webpack_public_path__ + \"static/media/game (2).50a2c1df.gif\";","module.exports = __webpack_public_path__ + \"static/media/game (3).7682298c.gif\";","import React, { useState, useEffect } from 'react';\r\nimport { Link, Router, Redirect } from '@reach/router';\r\n\r\nimport styles from './LoginReg.module.css';\r\n\r\nimport FormLogin from '../components/loginreg/FormLogin';\r\nimport FormReg from '../components/loginreg/FormReg';\r\n\r\n\r\n\r\nfunction LoginReg() {\r\n  const [ formVisibilityState, setFormVisibilityState ] = useState(\"loginForm\");\r\n\r\n  const toggleFormVisibility = e => {\r\n    if(formVisibilityState === \"loginForm\") {\r\n      setFormVisibilityState(\"regForm\");\r\n    } else {\r\n      setFormVisibilityState(\"loginForm\");\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className={styles.entirePage}>\r\n      <h1>Welcome to Mini Game App!</h1><br/>\r\n      <FormLogin formVisibility={formVisibilityState}/>\r\n      <FormReg formVisibility={formVisibilityState}/>\r\n      <br/>\r\n      <button onClick={toggleFormVisibility}>\r\n        {formVisibilityState === \"loginForm\" \r\n          ? \"Register\"\r\n          : \"Login\"}\r\n      </button><br/>\r\n    </div>\r\n    {/* [END] div App */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginReg;\r\n","import React from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst CustomizedButton = ({ socket, roomName, userName, dispatch }) => {\r\n\r\n    const logout = event =>{\r\n        socket.disconnect();\r\n\r\n        dispatch({\r\n            type: 'LOGOUT',\r\n        });\r\n\r\n        navigate('/');\r\n    };\r\n\r\n    const exitThisGame = event =>{\r\n        let gameName=\"\";\r\n        socket.emit(\"navigateParty\",\r\n            {\r\n                roomName,\r\n                gameName\r\n            }\r\n\r\n        );\r\n\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Button variant=\"outline-secondary\" onClick={exitThisGame}>Return to Game Room</Button>\r\n            <Button variant=\"outline-secondary\" onClick={logout}>Logout</Button>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        socket: state.socket,\r\n        userName: state.userName,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomizedButton);","import React, { useEffect, useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CustomizedButton from './CustomizedButton';\r\n\r\nimport navBarStyles from './GlobalComponents.module.css';\r\n\r\n//[ BOOTSTRAP ]\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst NavBar = ({ socket, dispatch, roomName, userName, admin }) => {\r\n    let gameName;\r\n\r\n    useEffect( () => {\r\n        if( userName == undefined || \r\n            userName.length < 1 || \r\n            roomName == undefined || \r\n            roomName.length < 1 ) {\r\n            navigate('/');\r\n        };\r\n\r\n    }, [socket, userName, roomName]);\r\n\r\n    const navLink = e => {\r\n        gameName = e.target.value;\r\n        console.log(gameName);\r\n        dispatch({\r\n            type: 'SETGAMENAME',\r\n            gameName,\r\n        });\r\n\r\n        dispatch({\r\n            type: 'SETROOMNAME',\r\n            roomName,\r\n        });\r\n\r\n        socket.emit(\"navigateParty\", \r\n            {\r\n                roomName,\r\n                userName,\r\n                gameName\r\n            }\r\n        );\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Navbar bg=\"secondary\" variant=\"dark\">\r\n            <Navbar.Brand href={`/${roomName}`}>MiniGame Party</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#\">Home</Nav.Link>\r\n                {/* <NavDropdown title=\"Games\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item onClick={navLink} value=\"mathhead\">Math Head</NavDropdown.Item>\r\n                    <NavDropdown.Item onClick={navLink} value=\"typefaster\">Type faster</NavDropdown.Item>\r\n                    <NavDropdown.Item href={`/${roomName}/`}>Wise To Memorise</NavDropdown.Item>\r\n                </NavDropdown> */}\r\n                </Nav>\r\n                <div>\r\n                    <p className={navBarStyles.textWhite}>Logged in as: <i> { userName } </i></p>\r\n                        {/* <br />\r\n                    <p className={navBarStyles.textWhite}>Admin:  { admin } </p>\r\n                        <br /> */}\r\n                </div>\r\n                <CustomizedButton className={navBarStyles.flexColCen}\r\n                    roomName={roomName}/>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userName: state.userName,\r\n        admin: state.admin,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavBar);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { navigate } from '@reach/router';\r\n\r\n// [ STYLING ]\r\nimport sbStyles from './GlobalComponents.module.css';\r\n\r\n//[ BOOTSTRAP ]\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nconst Scoreboard = ({ socket, userName, roomName, dispatch }) => {\r\n    const [ userList, setUserList ] = useState([]);\r\n    const [ scoreList, setScoreList ] = useState([]);\r\n\r\n    useEffect( () => {\r\n        if( userName === null || \r\n            userName.length < 1 || \r\n            userName === undefined || \r\n            roomName === null || \r\n            roomName.length < 1 || \r\n            roomName === undefined ) {\r\n            navigate('/');\r\n        };\r\n\r\n        socket.on(\"refreshScoreboard\", data => {\r\n            setUserList(data.userList);\r\n            setScoreList(data.scoreList);\r\n\r\n            dispatch({\r\n                type: \"SETSCOREBOARD\",\r\n                scoreboard: data.scoreboardList,\r\n                userList: data.userList,\r\n                scoreList: data.scoreList,\r\n            });\r\n        });\r\n\r\n    }, [socket, roomName, userName]);\r\n\r\n    return (\r\n        <>\r\n\r\n        <div className={[sbStyles.flexRowCen, sbStyles.textWhite].join(' ')}>\r\n        <Table striped bordered hover variant=\"dark\">\r\n        <tbody>\r\n                    <tr className={sbStyles.sbUser}>\r\n                        { userList.map( (user, i) =>\r\n                            <td key={i} className={sbStyles.cellWidth}>{user}</td>\r\n                        )}\r\n                    </tr>\r\n                    <tr className={sbStyles.sbScore}>\r\n                    { scoreList.map( (score, i) =>\r\n                            <td key={i}>{score} </td>\r\n                        )}\r\n                    </tr>\r\n                </tbody>\r\n        </Table>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userName: state.userName,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Scoreboard);\r\n\r\n","import React, {useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport styles from './Games.module.css';\r\n\r\nconst GameSelector = ({ socket, dispatch, userName, admin, roomName }) => {\r\n    const [ systemMsg, setSystemMsg ] = useState(\"\");\r\n    let gameName;\r\n\r\n    useEffect( () => {\r\n        socket.on(\"fullParty\", data => {\r\n            setSystemMsg(data);\r\n        });\r\n\r\n    }, [socket]);\r\n\r\n    const gameSelector = e => {\r\n        if( userName == undefined || \r\n            userName.length < 1 ||  \r\n            roomName == undefined || \r\n            roomName.length < 1  ) {\r\n            \r\n            navigate('/');\r\n        };\r\n\r\n        gameName = e.target.value;\r\n\r\n        dispatch({\r\n            type: 'SETGAMENAME',\r\n            gameName,\r\n        });\r\n\r\n        dispatch({\r\n            type: 'SETROOMNAME',\r\n            roomName,\r\n        });\r\n\r\n        socket.emit(\"navigateParty\", \r\n            {\r\n                roomName,\r\n                userName,\r\n                gameName\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className={[styles.flexColCen, styles.textWhite, styles.onlyDiv].join(' ')}>\r\n            <div className={styles.flexColCen}>\r\n                <h2 className={styles.textWhite}>Welcome, {userName}!</h2>\r\n                <h3 className={styles.textWhite}>You are in Room: {roomName}</h3>\r\n                    <br/>\r\n                <h3 className={styles.textWhite}>Pick a game below:</h3>\r\n                    <br/>\r\n                <p style={{color: \"red\"}}>{systemMsg}</p>\r\n                <div className={styles.flexRowCen}>\r\n                    <div className={styles.flexColCen}>\r\n                        <button \r\n                            onClick={gameSelector} \r\n                            value=\"mathhead\"\r\n                            className={styles.gameBtn}>\r\n                                Math Head\r\n                        </button>{\" \"}\r\n                        {/* <br/>\r\n                            <button \r\n                            onClick={gameSelector} \r\n                            value=\"wisetomemorize\"\r\n                            className={styles.gameBtn}>\r\n                                Wise to Memorize (Under Construction)\r\n                        </button>{\" \"}\r\n                            <br/>\r\n                        <button \r\n                        onClick={gameSelector} \r\n                        value=\"dontcomeinsideme\"\r\n                        className={styles.gameBtn}>\r\n                            Don't Come Inside Me (Under Construction)\r\n                        </button>{\" \"}\r\n                            <br/> */}\r\n                    </div>\r\n                    <div className={styles.flexColCen}>\r\n                        <button \r\n                            onClick={gameSelector} \r\n                            value=\"typefastermaster\"\r\n                            className={styles.gameBtn}>\r\n                                Type Faster Master\r\n                        </button>{\" \"}\r\n                            {/* <br/>\r\n                        <button \r\n                            onClick={gameSelector} \r\n                            value=\"littleboxes\"\r\n                            className={styles.gameBtn}>\r\n                                Little Boxes (Under Construction)\r\n                        </button>{\" \"}\r\n                            <br/>\r\n                        <button \r\n                            onClick={gameSelector} \r\n                            value=\"dropafatshot\"\r\n                            className={styles.gameBtn}>\r\n                                Drop a Fat Shot (Under Construction)\r\n                        </button>{\" \"}\r\n                            <br/> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userName: state.userName,\r\n        admin: state.admin,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(GameSelector);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport chatStyles from './Chat.module.css';\r\n\r\nconst Chat = ( { socket, userName, roomName } ) => {\r\n  const [ chatLog, setChatLog ] = useState([]);\r\n  const [ userInput, setUserInput ] = useState(\"\");\r\n\r\n  // ADMIN STATE BOOLEAN\r\n  const [ adminState, setAdminState ] = useState(false);\r\n\r\n  useEffect( () => {\r\n    if (  userName === null || \r\n          userName.length < 1 || \r\n          userName === undefined || \r\n          roomName === null || \r\n          roomName.length < 1 || \r\n          roomName === undefined ) {\r\n        navigate('/');\r\n    };\r\n\r\n    socket.on('updateChatLog', data => {\r\n      setChatLog(data);\r\n    });\r\n\r\n  }, [socket, roomName, userName]);\r\n\r\n  const sendMsg = e => {\r\n    e.preventDefault();\r\n    let now = new Date();\r\n\r\n    socket.emit(\"newMsg\", \r\n      {\r\n        roomName,\r\n        userName,\r\n        userInput,\r\n        timestamp: now,\r\n      }  \r\n    );\r\n    setUserInput(\"\");\r\n\r\n  };\r\n\r\n  return (\r\n    <div style={{'height' : '60%'}}>\r\n      <div className={chatStyles.chatBox}>\r\n        { chatLog.map( (message, i) =>\r\n          message.userName === userName\r\n          ? <div key={i} className={chatStyles.sentMessage}>\r\n              <p style={{'backgroundColor' : 'royalblue'}}> {message.msg} </p>\r\n            </div>\r\n          : <div key={i} className={chatStyles.recievedMessage}>\r\n            <p style={{'backgroundColor' : 'silver'}}> {message.userName.toLocaleUpperCase()} : {message.msg}</p>\r\n            </div>\r\n        )}\r\n      </div>\r\n      <form onSubmit={sendMsg}>\r\n        <input type=\"text\"\r\n          placeholder=\"Type message here\"\r\n          value={userInput}\r\n          onChange={e=>setUserInput(e.target.value)}/>\r\n          <input type=\"submit\" value=\"Send\"/>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n      userName: state.userName,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Chat);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// [ STYLING ]\r\nimport styles from '../GlobalComponents.module.css';\r\n\r\n\r\n\r\nconst CountdownTimer = ({ socket }) => {\r\n    const [ timeAllowed, setTimeAllowed ] = useState(0);\r\n    const [ startDate, setStartDate ] = useState(new Date());\r\n\r\n    const calculateTimeLeft = () => {\r\n        const timeDifference = timeAllowed - ( +new Date() - +startDate );\r\n        let timeLeft = {};\r\n\r\n        if ( timeDifference > 0 ) {\r\n            timeLeft = {\r\n                // days: Math.floor( (timeDifference / (1000 * 60 * 60 * 24)) ),\r\n                // hours: Math.floor( (timeDifference / (1000 * 60 * 60) ) % 24 ),\r\n                // minutes: Math.floor( (timeDifference / 1000 / 60) % 60 ),\r\n                seconds: Math.floor( (timeDifference / 1000) % 60 ),\r\n                milliseconds: ( (timeDifference % 1000 ) ),\r\n            }\r\n        };\r\n\r\n        return timeLeft;\r\n    };\r\n\r\n    const [ timeLeft, setTimeLeft ] = useState( calculateTimeLeft() );\r\n\r\n    useEffect( () => {\r\n        setTimeout( () => {\r\n            setTimeLeft( calculateTimeLeft() );\r\n        }, 1);\r\n    });\r\n\r\n    useEffect( () => {\r\n        socket.on(\"startTimer\", data => {\r\n            setTimeAllowed(data.timeAllowed);\r\n            console.log(\"incoming data.timeAllowed: \"+data.timeAllowed);\r\n        });\r\n\r\n    }, [socket]);\r\n\r\n    const timerComponents = [];\r\n\r\n    Object.keys(timeLeft).forEach(interval => {\r\n        if (!timeLeft[interval]) {\r\n            timeLeft[interval] = 0;\r\n        };\r\n\r\n        timerComponents.push(\r\n            <span key={interval}>\r\n                {timeLeft[interval]} {interval}{\" \"}\r\n            </span>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={styles.textWhite}>\r\n            {timerComponents.length \r\n                ? timerComponents \r\n                : <span>Time's up!</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        socket: state.socket,\r\n        roomName: state.roomName,\r\n        gameName: state.gameName,\r\n        userName: state.userName,\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CountdownTimer);","import React, { useState, useEffect } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport { connect } from 'react-redux';\r\n\r\n// [ COMPONENTS ]\r\nimport CountdownTimer from '../timer/CountdownTimer';\r\n\r\n// [ STYLING ]\r\nimport styles from './Games.module.css';\r\n\r\n\r\nconst MathHead = ({ socket, userName, roomName }) => {\r\n    const gameName = \"mathhead\";\r\n\r\n    // ADMIN STATE BOOLEAN\r\n    const [ adminState, setAdminState ] = useState(false);\r\n\r\n    // ELEMENT VISIBILITY\r\n    const [ formVisibility, setFormVisibility ] = useState(\"hidden\");\r\n    const [ resultsVisibility, setResultsVisibility ] = useState(\"hidden\");\r\n\r\n    // CREATING QUESTION AND ANSWER\r\n    const [ difficulty, setDifficulty ] = useState(\"Medium\");\r\n    const [ question, setQuestion ] = useState();\r\n    const [ answer, setAnswer ] = useState();\r\n\r\n    // POST ANSWER SUBMISSION\r\n    const [ userInput, setUserInput ] = useState(\"\");\r\n    const [ resultMsg, setResultMsg ] = useState([]);\r\n    const [ resultColor, setResultColor ] = useState(\"white\");\r\n\r\n    // ANSWER TIMER\r\n    const [ timerStart, setTimerStart ] = useState(\"\");\r\n    const [ totalTime, setTotalTime ] = useState(0);\r\n    const [ timeAllowed, setTimeAllowed ] = useState(0);\r\n\r\n    useEffect( () => {\r\n        if( !userName || !roomName ) {\r\n            navigate('/');\r\n        };\r\n\r\n        socket.emit( 'mathHeadEntered', \r\n            {\r\n                userName,\r\n                roomName,\r\n                gameName,\r\n            }\r\n        );\r\n\r\n        socket.on(\"syncNewUser\", data => {\r\n            dispatchEvent({})\r\n            navigate(\"/\"+roomName+\"/\"+data);\r\n        });\r\n\r\n        socket.on(\"sharedMathHeadTarget\", data => {\r\n            setFormVisibility(\"hidden\");\r\n            setFormVisibility(\"visible\");\r\n            setResultsVisibility(\"hidden\");\r\n            setQuestion(data.question);\r\n            setAnswer(data.answer);\r\n            setTimerStart(data.createdAt);\r\n            setTimeAllowed(data.timeAllowed);\r\n        });\r\n\r\n        socket.on(\"answeredMathHeadTarget\", data => {\r\n            setFormVisibility(\"hidden\");\r\n            setResultsVisibility(\"visible\");\r\n            setResultMsg([\r\n                data.userName+\" beat you! \", \r\n                data.question+\" equals \"+data.answer+\"!\", \r\n                \"They beat you in \"+data.totalTimeTaken+\" seconds\", \r\n                \"They scored \"+data.points+\" points!\", \r\n                \"You can get it next time!\"]);\r\n            setResultColor(\"orange\");\r\n        });\r\n\r\n    }, [socket, roomName, userName, gameName]);\r\n    \r\n    // Change difficulty\r\n    const difficultyLevels = [ \"Easy\", \"Medium\", \"Hard\", \"Genius\" ];\r\n    const changeDifficulty = event => {\r\n        setDifficulty(event.target.value);\r\n    };\r\n\r\n    // [ TOP ] Create question and use sockets to share with all players\r\n    const createTarget = (e) => {\r\n        // Start timer\r\n        let now = new Date();\r\n        let questionTime = now.getTime();\r\n        setTimerStart(questionTime);\r\n        setTotalTime(0);\r\n\r\n        setResultMsg([]);\r\n        setFormVisibility(\"visible\");\r\n\r\n        const operators = [ \"+\", \"-\", \"×\"];\r\n\r\n        const getRandomInt = (maxNum, minNum) => {\r\n            let num = Math.floor(Math.random() * (maxNum - minNum) + minNum );\r\n            return num;\r\n        }; // [END] subfunction getRandomInt\r\n\r\n        let max;\r\n        let min;\r\n        let maxOp;\r\n        let minOp;\r\n        const generateProblem = (max, min, maxOp, minOp) => {\r\n            const num1 = getRandomInt(max, min);\r\n            const num2 = getRandomInt(max, min);\r\n            const operator = operators[getRandomInt(maxOp, minOp)];\r\n            let result;\r\n            if (operator === \"+\") {\r\n                result = num1+num2;\r\n            };\r\n            if (operator === \"-\") {\r\n                result = num1-num2;\r\n            };\r\n            if (operator === \"×\") {\r\n                result = num1*num2;\r\n            };\r\n\r\n            socket.emit(\"mathHeadTargetGenerated\", \r\n                {\r\n                    question: (num1+\" \"+operator+\" \"+num2),\r\n                    answer: result,\r\n                    createdAt: questionTime,\r\n                    timeAllowed: 20000,\r\n                });\r\n        }; // [END] sub-function generateProblem\r\n\r\n        // Question changes based on difficulty\r\n        if ( difficulty === \"Easy\" ) {\r\n            max = 21;\r\n            min = 2;\r\n            maxOp = 2;\r\n            minOp = 0;\r\n        };\r\n        if ( difficulty === \"Medium\" ) {\r\n            max = 52;\r\n            min = 5;\r\n            maxOp = 3;\r\n            minOp = 0;\r\n        };\r\n        if ( difficulty === \"Hard\" ) {\r\n            max = 102;\r\n            min = 11;\r\n            maxOp = 3;\r\n            minOp = 0;\r\n        };\r\n        if ( difficulty === \"Genius\" ) {\r\n            max = 1002;\r\n            min = 11;\r\n            maxOp = 3;\r\n            minOp = 0;\r\n        } else {\r\n            setDifficulty(\"Easy\");\r\n        };\r\n        generateProblem(max, min, maxOp, minOp);\r\n    };\r\n    // [ END ] Create question and use sockets to share with players\r\n\r\n    const findResult = (event) => {\r\n        event.preventDefault();\r\n\r\n        if ( userInput == answer ) {\r\n            // time and score\r\n            let now = new Date();\r\n            let answerTime = now.getTime();\r\n            let totalTimeTaken = Math.round((+answerTime - + timerStart))/1000;\r\n            let points = 20-totalTimeTaken;\r\n\r\n            // if ( difficulty == \"Easy\") {\r\n            //     points = 10-totalTimeTaken;\r\n            // };\r\n            // if ( difficulty == \"Medium\") {\r\n            //     points = 15-totalTimeTaken;\r\n            // };\r\n            // if ( difficulty == \"Hard\") {\r\n            //     points = 20-totalTimeTaken;\r\n            // };\r\n            // if ( difficulty == \"Genius\") {\r\n            //     points = 40-totalTimeTaken;\r\n            // };\r\n\r\n            console.log(\"points: \"+points);\r\n            setTimerStart(\"\");\r\n            \r\n            // results\r\n            setResultMsg([\r\n                \"🏆🏆 You got it! 🏆🏆\",\r\n                question+\" does equal \"+userInput+\"!\", \r\n                \"You scored \"+points+\" points!\",\r\n                \"It took you \"+totalTimeTaken+\" seconds\",]);\r\n            setResultColor(\"green\");\r\n\r\n            // RESET FORM\r\n            setUserInput(\"\");\r\n            setFormVisibility(\"hidden\");\r\n            \r\n            // [ SOCKET ] emit after answered correctly\r\n            socket.emit(\"mathHeadTargetAnswered\", \r\n                {\r\n                    socketId: socket.id,\r\n                    userName,\r\n                    roomName,\r\n                    question,\r\n                    answer,\r\n                    totalTimeTaken,\r\n                    points: points.toFixed(3),\r\n                }\r\n            );\r\n        // wrong answer submitted; set wrong msg and no emit\r\n        } else {\r\n            setResultMsg([\r\n                \"WRONG!\", \r\n                question + \" does not equal \"+userInput+\"!\"]);\r\n            setResultColor(\"red\");\r\n        };\r\n        setUserInput(\"\");\r\n        setResultsVisibility(\"visible\");\r\n    }; // [END] of function findResult\r\n\r\n    return(\r\n        <div className={styles.entirePage}>\r\n            <h3 className={styles.textWhite}> <i> {userName} </i>  </h3>\r\n                <br />\r\n            <h2 className={styles.textWhite}>Math Head</h2>\r\n                <br/>\r\n\r\n            <div>\r\n                {difficultyLevels.map( (d, i) => {\r\n\r\n                    return (\r\n                        <button \r\n                            onClick={changeDifficulty} \r\n                            key={i} \r\n                            name={d} \r\n                            value={d} \r\n                            className={(d === difficulty ? styles.activeBtn : styles.inactiveBtn)}>\r\n                                {d}\r\n                        </button>\r\n                    )\r\n                })}\r\n            </div>\r\n                <br/>\r\n\r\n            <button onClick={createTarget} className={styles.createBtn}>{\"Create \" + difficulty + \" Problem\"}</button>\r\n                <br/>\r\n\r\n            <div className={formVisibility === \"hidden\" \r\n                ? styles.hiddenForm \r\n                : styles.visibleForm}>\r\n                    { formVisibility === \"hidden\"\r\n                        ? <p> Countdown timer not yet activated </p>\r\n                        : <CountdownTimer /> }\r\n                    <p className={styles.textWhite}>{question}</p>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                <form onSubmit={findResult}>\r\n                    <input \r\n                        type=\"text\"\r\n                        placeholder=\"Enter you answer here\"\r\n                        value={userInput}\r\n                        onChange={e=>setUserInput(e.target.value)}/>\r\n                    <input type=\"submit\" value=\"Submit\"/>\r\n                </form>\r\n            </div>\r\n                <br/>\r\n\r\n            <div className={resultsVisibility === \"hidden\" \r\n                ? styles.hiddenForm \r\n                : styles.visibleForm}>\r\n                {resultMsg.length > 0 && resultMsg.map( (msg, i) => \r\n                    <>\r\n                    <p style={{color: resultColor}} key={i}>{msg}</p>\r\n                        <br/>\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userName: state.userName,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MathHead);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './Games.module.css';\r\n\r\nconst WiseToMemorize = ({ roomName }) => {\r\n\r\n    // generate a random string\r\n    // show the string for about 3-5 secs\r\n    // string will vanish\r\n    // input field will be invisible, not even password status\r\n    // points will be based off time to type it\r\n    // incorrect submissions will get negative points\r\n\r\n    const [ string, setString ] = useState(null);\r\n    const [ formState, setFormState ] = useState(\"\");\r\n\r\n    const generateRandomString = e => {\r\n        // click button to generate random string at a random setTimeout\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        \r\n    };\r\n\r\n    return(\r\n        <>\r\n        <div className={styles.entirePage}>\r\n            <h2 className={styles.textWhite}>Wise to Memorize</h2>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        socket: state.socket,\r\n        userName: state.userName,\r\n        userScore: state.userScore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(WiseToMemorize);","import React, { useState, useEffect } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport { connect } from 'react-redux';\r\n\r\n// [ COMPONENTS ]\r\nimport CountdownTimer from '../timer/CountdownTimer';\r\n\r\n// [ STYLING ]\r\nimport styles from './Games.module.css';\r\n\r\nvar randomWords = require('random-words');\r\n\r\nconst TypeFasterMaster = ({  socket, userName, roomName })  => {\r\n    const gameName = \"typefastermaster\";\r\n\r\n    // ADMIN STATE BOOLEAN\r\n    const [ adminState, setAdminState ] = useState(false);\r\n\r\n    // ELEMENT VISIBILITY\r\n    const [ formVisibility, setFormVisibility ] = useState(\"hidden\");\r\n    const [ resultsVisibility, setResultsVisibility ] = useState(\"hidden\");\r\n\r\n    // CREATING QUESTION(string) AND ANSWER(userInput)\r\n    const [ difficulty, setDifficulty ] = useState(\"Easy\")\r\n    const [ targetString, setTargetString ] = useState(\"\");\r\n    const [ userInput, setUserInput ] = useState(\"\");\r\n\r\n    // POST ANSWER SUBMISSION\r\n    const [ resultMsg, setResultMsg ] = useState([]);\r\n    const [ resultColor, setResultColor ] = useState(\"white\");\r\n\r\n    // ANSWER TIMER\r\n    const [ timer, setTimer ] = useState(\"\");\r\n    const [ totalTime, setTotalTime ] = useState(0);\r\n\r\n    useEffect( () => {  \r\n        if( !userName || !roomName ) {\r\n            navigate('/');\r\n        };\r\n\r\n        socket.emit('typeFasterEntered', \r\n            {\r\n                userName,\r\n                roomName,\r\n                gameName,\r\n            }\r\n        );\r\n        \r\n        socket.on(\"syncNewUser\", data => {\r\n            navigate(\"/\"+roomName+\"/\"+data);\r\n        });\r\n\r\n        socket.on(\"sharedTypeFasterTarget\", data => {\r\n            console.log(\"sharedTypeFasterTarget activated:\"+data.target);\r\n            setFormVisibility(\"hidden\");\r\n            setFormVisibility(\"visible\");\r\n            setResultsVisibility(\"hidden\");\r\n            setTargetString(data.target);\r\n            setTimer(data.createdAt); \r\n        });\r\n\r\n        socket.on(\"answeredTypeFasterTarget\", data => {\r\n            console.log(\"Data from typeFaster client: \"+data.userName);\r\n            setFormVisibility(\"hidden\");\r\n            setResultsVisibility(\"visible\");\r\n            setResultMsg([\r\n                data.userName+\" beat you! \", \r\n                \"They beat you in\" +data.totalTimeTaken + \" seconds\",\r\n                \"They scored \"+data.points+\" points!\", \r\n                \"You can get it next time!\"]);\r\n            setResultColor(\"orange\");\r\n        });\r\n        \r\n    }, [socket, roomName, userName, gameName]);\r\n\r\n    // Set difficulty\r\n    const difficultyLevels = [\"Easy\", \"Medium\", \"Hard\", \"Genius\"];\r\n    const changeDifficulty = event =>{\r\n        setDifficulty(event.target.value);\r\n    };\r\n\r\n    // Create Target String\r\n    const createTarget = () => {\r\n\r\n        let now = new Date();\r\n        let questionTime = now.getTime();\r\n        setTimer(questionTime);\r\n        setTotalTime(0);\r\n\r\n        setResultMsg([]);\r\n        setFormVisibility(\"visible\");\r\n\r\n        let string;\r\n        if ( difficulty === \"Easy\" ){\r\n            string = randomWords(2);\r\n        };\r\n        if ( difficulty == \"Medium\" ){\r\n            string = randomWords(4);\r\n        };\r\n        if ( difficulty == \"Hard\" ){\r\n            string = randomWords(6);\r\n        };\r\n        if ( difficulty == \"Genius\" ){ // returning string.join is not a function when submitting answer for Genius problem\r\n            //join used to remove the comma between the words that is being created by randomWords()\r\n            string = Math.random().toString(36).substring(2, 20) + randomWords(4).join('');\r\n            console.log(\"Genius string: \"+string);\r\n        };\r\n\r\n        socket.emit(\"typeFasterTargetGenerated\", \r\n        {\r\n            target: string,\r\n            createdAt: questionTime\r\n        });\r\n    };\r\n\r\n    // Answer submission/confirmation\r\n    const findResult = (event) =>{\r\n        event.preventDefault();\r\n\r\n        if ( difficulty == \"Genius\" && userInput == targetString.join('') ) {\r\n            let now = new Date();\r\n            let answerTime = now.getTime();(now.getSeconds()).toString();\r\n            let totalTimeTaken = Math.round((+answerTime - + timer))/1000;\r\n            let points = 40-((+answerTime - + timer)/1000);\r\n            setTimer(\"\");\r\n    \r\n            setResultMsg([\r\n                \"🏆🏆 You got it! Genius! 🏆🏆\",\r\n                \"You scored \"+points+\" points!\",\r\n                \"It took you \"+totalTimeTaken+\" seconds\"]);\r\n            setResultColor(\"green\");\r\n\r\n            //RESET FORM\r\n            setUserInput(\"\");\r\n            setFormVisibility(\"hidden\");\r\n\r\n            socket.emit(\"typeFasterTargetAnswered\", \r\n                {\r\n                    socketId: socket.id,\r\n                    userName,\r\n                    roomName,\r\n                    string: targetString,\r\n                    totalTimeTaken,\r\n                    points: points.toFixed(3),\r\n                }\r\n            );\r\n        };\r\n        \r\n        if ( difficulty != \"Genius\" && userInput == targetString.join('') ){\r\n            let now = new Date();\r\n            let answerTime = now.getTime();\r\n            let totalTimeTaken = Math.round((+answerTime - + timer))/1000;\r\n            let points = 20-((+answerTime - + timer)/1000);\r\n            setTimer(\"\");\r\n    \r\n            setResultMsg([\r\n                \"🏆🏆 You got it! 🏆🏆\",\r\n                \"You scored \"+points+\" points!\",\r\n                \"It took you \"+totalTimeTaken+\" seconds\"]);\r\n            setResultColor(\"green\");\r\n\r\n            //RESET FORM\r\n            setUserInput(\"\");\r\n            setFormVisibility(\"hidden\");\r\n\r\n            socket.emit(\"typeFasterTargetAnswered\", \r\n                {\r\n                    socketId: socket.id,\r\n                    userName,\r\n                    roomName,\r\n                    string: targetString,\r\n                    totalTimeTaken,\r\n                    points\r\n                }\r\n            );\r\n        } else {\r\n            setResultMsg([\r\n                \"WRONG!\", \r\n                \"You had a typo in there!\"\r\n            ]);\r\n            setResultColor(\"red\");\r\n        };\r\n        setUserInput(\"\");\r\n        setResultsVisibility(\"visible\");\r\n    }; // [END] of function findResult\r\n\r\n    return (\r\n        <>\r\n        <div className={styles.entirePage}>\r\n\r\n            <h3 className={styles.textWhite}> <i> {userName} </i>  </h3>\r\n\r\n                <br/>\r\n            <h2  className={styles.textWhite}>Type Faster Master</h2>\r\n                <br />\r\n            <div>\r\n                {difficultyLevels.map( (d, i) => {\r\n\r\n                    return (\r\n                        <button \r\n                            onClick={changeDifficulty} \r\n                            key={i} \r\n                            name={d} \r\n                            value={d} \r\n                            className={(d == difficulty ? styles.activeBtn : styles.inactiveBtn)}>\r\n                            {d}\r\n                        </button>\r\n                    )\r\n                })}\r\n            </div>\r\n                <br/>\r\n\r\n            <button onClick={createTarget} className={styles.createBtn}>{\"Create \" + difficulty + \" Problem\"}</button>\r\n                <br />\r\n            <div className={formVisibility == \"hidden\" \r\n                ? styles.hiddenForm \r\n                : styles.visibleForm}>\r\n                    <p className={styles.textWhite}> {targetString} </p>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                <form onSubmit = {findResult}>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Type faster here\"\r\n                        value={userInput} \r\n                        onChange= {e => setUserInput(e.target.value)} \r\n                        onPaste = {e=> e.preventDefault()}\r\n                        />\r\n                    <button name=\"submitButton\" style={{backgroundColor: 'pink'}} type=\"submit\">Go!</button>\r\n                </form>  \r\n            </div>\r\n                <br />\r\n            <div className={resultsVisibility == \"hidden\" \r\n                ? styles.hiddenForm \r\n                : styles.visibleForm}>\r\n                {resultMsg.length > 0 && resultMsg.map( (msg, i) => \r\n                    <>\r\n                    <p style={{color: resultColor}} key={i}>{msg}</p>\r\n                        <br/>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userName: state.userName,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TypeFasterMaster);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './Games.module.css';\r\n\r\nconst LittleBoxes = ({ roomName }) => {\r\n\r\n    // a series of divs will show up with random bgColors and textColors\r\n    // at random setTimeouts, prompt will display a div:\r\n    // \"click on the { color } box\" while textColor and bgColor are random (to confuse brain processing)\r\n    // players will have to click on the appropriate div\r\n    // once a player clicks the right div they get the points\r\n    // then the next prompt and set of divs will appear\r\n\r\n    return (\r\n        <>\r\n        <div className={styles.entirePage}>\r\n            <h2 className={styles.textWhite}> Little Boxes </h2>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        socket: state.socket,\r\n        userName: state.userName,\r\n        userScore: state.userScore\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LittleBoxes);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './Games.module.css';\r\n\r\nconst DontComeInsideMe = ({ roomName }) => {\r\n\r\n    // at random setTimeout, prompt will shout \"Come to me!\"\r\n    // bar will display with a target line towards the end of the bar, with a red forbidden area\r\n    // aiming bar will move at random speeds\r\n    // player must click button before the aiming line passes the target line\r\n    // player who gets closest to the target line without passing into the red area gets the points\r\n\r\n    return (\r\n        <>\r\n        <div className={styles.entirePage}>\r\n            <h2 className={styles.textWhite}>Don't Come Inside Me!</h2>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userName: state.userName,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DontComeInsideMe);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './Games.module.css';\r\n\r\nconst DropAFatShot = ({ roomName }) => {\r\n\r\n    // have a static target of a specific size\r\n    // each player gets a turn;\r\n    // each player clicks and drags a start point and end point, drawing a line\r\n    // the shot travels in the same line as the one drawn\r\n    // as the bullet travels across the target, it covers a certain surface area\r\n    // whosever bullet covers the most surface area is the winner\r\n\r\n    return (\r\n        <>\r\n        <div className={styles.entirePage}>\r\n            <h2 className={styles.textWhite}> Drop a Fat Shot </h2>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userName: state.userName,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DropAFatShot);","import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { navigate, Router } from '@reach/router';\r\nimport { connect } from 'react-redux';\r\n\r\n// [ COMPONENTS ]\r\nimport NavBar from \"../components/NavBar\";\r\nimport Scoreboard from \"../components/Scoreboard\";\r\nimport GameSelector from \"../components/games/GameSelector\";\r\nimport Chat from '../components/chat/Chat';\r\n\r\n// [ GAMES ]\r\nimport MathHead from '../components/games/MathHead';\r\nimport WiseToMemorize from '../components/games/WiseToMemorize';\r\nimport TypeFasterMaster from '../components/games/TypeFasterMaster';\r\nimport LittleBoxes from '../components/games/LittleBoxes';\r\nimport DontComeInsideMe from '../components/games/DontComeInsideMe';\r\nimport DropAFatShot from '../components/games/DropAFatShot';\r\n\r\n// [ STYLING ]\r\nimport styles from './Views.module.css';\r\nimport gameStyles from '../components/games/Games.module.css';\r\nimport chatStyles from '../components/chat/Chat.module.css'\r\n\r\n// [ ANIMATIONS ]\r\nimport Fade from 'react-reveal';\r\n\r\nconst GameRoom = ({ dispatch, userName, roomName }) => {\r\n    const gameName = \" \";\r\n\r\n    // [ SOCKETS ] CHOOSE ONE: localhost:8000 / deployed\r\n    const [ socket ] = useState( () => io('http://localhost:8000') );\r\n    // const [ socket ] = useState( () => io() );\r\n\r\n    // ADMIN STATE BOOLEAN\r\n    const [ adminState, setAdminState ] = useState(false);\r\n\r\n    useEffect( () => {\r\n        socket.emit(\"enteredGameRoom\", \r\n            {\r\n                userName,\r\n                roomName,\r\n                gameName,\r\n            }\r\n        );\r\n\r\n        dispatch({\r\n            type: 'SETSOCKET',\r\n            socket,\r\n        });\r\n\r\n        dispatch({\r\n            type: 'SETUSERNAME',\r\n            userName,\r\n        });\r\n\r\n        dispatch({\r\n            type: 'SETROOMNAME',\r\n            roomName,\r\n        });\r\n\r\n        dispatch({\r\n            type: 'SETGAMENAME',\r\n            gameName,\r\n        });\r\n\r\n        // will this work?\r\n        // dispatch(\r\n        //     {\r\n        //         type: 'SETSOCKET',\r\n        //         socket,\r\n        //     },\r\n        //     {\r\n        //         type: 'SETUSERNAME',\r\n        //         userName,\r\n        //     },\r\n        //     {\r\n        //         type: 'SETROOMNAME',\r\n        //         roomName,\r\n        //     },\r\n        //     {\r\n        //         type: 'SETGAMENAME',\r\n        //         gameName,\r\n        //     },\r\n        // );\r\n\r\n    }, [] );\r\n\r\n    useEffect( () => {\r\n        if( userName === null || \r\n            userName.length < 1 || \r\n            userName === undefined || \r\n            roomName === null || \r\n            roomName.length < 1 || \r\n            roomName === undefined ) {\r\n            \r\n            navigate('/');\r\n        };\r\n        \r\n        // socket.emit(\"join room\", {\r\n        //     userName,\r\n        //     roomName\r\n        // })\r\n\r\n        socket.on(\"setAdmin\", admin => {\r\n            console.log(admin);\r\n            dispatch({\r\n                type: 'SETADMIN',\r\n                admin\r\n            });\r\n        });\r\n\r\n        socket.emit(\"chatLogUpdate\",\r\n            {\r\n                userName,\r\n                roomName,\r\n            }\r\n        );\r\n\r\n        socket.emit(\"scoreboardUpdate\", \r\n            { \r\n                userName,\r\n                roomName,\r\n            }\r\n        );\r\n\r\n        socket.on(\"syncNewUser\", data => {\r\n            dispatch({\r\n                type: 'SETADMIN',\r\n                admin: data.name\r\n            })\r\n            navigate(\"/\"+roomName+\"/\"+data.currentGame);\r\n        });\r\n        \r\n        socket.on(\"partyNavigator\", data => {\r\n            navigate('/'+data.roomName+'/'+data.gameName);\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, [socket, userName, roomName]);\r\n\r\n    return (\r\n        <>\r\n        <Fade top big>\r\n        <NavBar socket={socket} \r\n            roomName={roomName} />\r\n        <Scoreboard socket={socket}\r\n            roomName={roomName} />\r\n        <div className={styles.contentRow}>\r\n            <div className={gameStyles.gameComponent}>\r\n                <Router>\r\n                    <GameSelector path=\"/\" \r\n                        socket={socket} \r\n                        roomName={roomName} />\r\n                    <MathHead path=\"/mathhead\" \r\n                        socket={socket} \r\n                        roomName={roomName} />\r\n                    <TypeFasterMaster path=\"/typefastermaster\" \r\n                        socket={socket} \r\n                        roomName={roomName} />\r\n                    <WiseToMemorize path=\"/wisetomemorize\" \r\n                        socket={socket} \r\n                        roomName={roomName} />\r\n                    <LittleBoxes path=\"/littleboxes\" \r\n                        socket={socket} \r\n                        roomName={roomName} />\r\n                    <DontComeInsideMe path=\"/dontcomeinsideme\" \r\n                        socket={socket} \r\n                        roomName={roomName} />\r\n                    <DropAFatShot path=\"/dropafatshot\" \r\n                        socket={socket} \r\n                        roomName={roomName} />\r\n                </Router>\r\n            </div>\r\n            <div className={chatStyles.chatComponent}>\r\n                <Chat socket={socket} \r\n                    roomName = {roomName} />\r\n            </div>\r\n        </div>\r\n        </Fade>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userName: state.userName,\r\n        admin: state.admin,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(GameRoom);\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// [ STYLING ]\r\nimport styles from '../GlobalComponents.module.css';\r\n\r\nconst PausableTimer = ({ socket, roomName, gameName, userName, startTime }) => {\r\n    const [ timerEvents, setTimerEvents ] = useState([]);\r\n    // maybe timeElapsed should be a useState hook\r\n    let timeElapsed = 0;\r\n\r\n    const elapsedTime = () => {\r\n        for(let i=0; i<timerEvents.length; i+=2) {\r\n            const start = timerEvents[i];\r\n            // bc of line below, timer adds .001s immediately on start, when it shouldn't\r\n            const stop = timerEvents[i+1] || new Date();\r\n\r\n            timeElapsed += ( stop - start );\r\n        };\r\n\r\n        return ( timeElapsed/1000 + \" seconds\" );\r\n    };\r\n\r\n    // useEffect for live timer, currently non-functional\r\n    // useEffect( () => {\r\n    //     setTimeout( () => {\r\n    //         elapsedTime()\r\n    //     }, 1);\r\n    // }, [timeElapsed]);\r\n\r\n    const addTimerEvent = e => {\r\n        setTimerEvents( [\r\n            ...timerEvents,\r\n            new Date(),\r\n        ] )\r\n    };\r\n\r\n    const timerLabel = timerEvents.length %2 == 0\r\n        ? 'Start'\r\n        : 'Stop';\r\n\r\n    return (\r\n        <div className='elapsedTime'>\r\n            <p \r\n                style={{\"color\": \"white\"}}> \r\n                    { elapsedTime() } \r\n            </p>\r\n            <button \r\n                onClick={addTimerEvent}\r\n                style={{\"color\": \"white\"}}>\r\n                    {timerLabel}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        socket: state.socket,\r\n        roomName: state.roomName,\r\n        gameName: state.gameName,\r\n        userName: state.userName,\r\n\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PausableTimer);","// [MAIN COMPONENTS]\r\nimport React, { useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport { connect } from 'react-redux';\r\n\r\n// [TIMER]\r\nimport PausableTimer from '../components/timer/PausableTimer';\r\nimport CountdownTimer from '../components/timer/CountdownTimer';\r\n\r\n// [STYLES]\r\nimport styles from './Views.module.css';\r\n\r\n//[Material -UI]\r\nimport {\r\n    fade,\r\n    ThemeProvider,\r\n    withStyles,\r\n    makeStyles,\r\n    createMuiTheme,\r\n  } from '@material-ui/core/styles';\r\n  import TextField from '@material-ui/core/TextField';\r\n\r\n//[ ANIMATION]\r\nimport {Fade} from 'react-reveal';\r\n\r\n// [BOOTSTRAP]\r\nimport Carousel from 'react-bootstrap/Carousel';\r\n\r\n\r\nconst Lobby = ({ dispatch }) => {\r\n    const [ formState, setFormState ] = useState({\r\n        uName: \"\",\r\n        rName: \"\",\r\n        rPassword: \"\"\r\n    });\r\n    const [ errorMsg, setErrorMsg ] = useState (\"\");\r\n\r\n    const onChangeHandler = e => {\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const enterRoom = e => {\r\n        e.preventDefault();\r\n        if (formState.uName.length>0 && formState.rName.length>0) {\r\n            dispatch(\r\n                {\r\n                type: 'SETUSERNAME',\r\n                userName: formState.uName,\r\n                }\r\n            );\r\n            dispatch(\r\n                {\r\n                type: 'SETROOMNAME',\r\n                roomName: formState.rName,\r\n                },\r\n            );\r\n            navigate('/'+formState.rName);\r\n        } else {\r\n            setErrorMsg(\"Please enter both a user and room name\");\r\n        };\r\n    }; \r\n\r\n    // in /views/GameRoom.js we will have a list of sockets connected, chatbox, + list of games (later we will add total score for session using state or redux)\r\n\r\n    return (\r\n        <>\r\n        <div className={[styles.textWhite, styles.onlyDiv].join(' ')}>\r\n            <br/>\r\n            <div className={styles.flexColCen}>\r\n            <Carousel>\r\n                <Carousel.Item >\r\n                    <img height=\"420px\" alt=\"minigameparty.gif\" src={require(\"../assets/images/game (1).gif\")}/>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img height=\"420px\" alt=\"mathhead\" src={require(\"../assets/images/game (2).gif\")}/>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img height=\"420px\" alt=\"typefastermaster\" src={require(\"../assets/images/game (3).gif\")}/>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n            <br/>\r\n            <br/>\r\n            </div>\r\n\r\n            <div className={[styles.textWhite, styles.onlyDiv, styles.flexColCen].join(' ')}>\r\n            <h1>Join the Party, Join the Fun!</h1>\r\n\r\n            <p className={styles.textRed}>Please enter your desired nick name and room you wish to enter or create</p> \r\n                <br/> <br/>\r\n            <form className={styles.flexColCen} onSubmit={enterRoom}>\r\n\r\n                <p style={{color: \"red\"}}>{errorMsg}</p>\r\n\r\n                <div className={styles.inputRow}>\r\n                    <label>Nick Name: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"uName\"\r\n                        value={formState.uName}\r\n                        onChange={onChangeHandler} /> \r\n                </div> \r\n                    <br/>\r\n                <div className={styles.inputRow}>\r\n                    <label>Room Name:</label>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"rName\"\r\n                        value={formState.rName}\r\n                        onChange={onChangeHandler} /> \r\n                </div> \r\n                    <br/>\r\n                <div className={styles.inputRow}>\r\n                    <label>Password:</label>\r\n                    <input \r\n                        type=\"password\"\r\n                        name=\"rPassword\"\r\n                        value={formState.rPassword}\r\n                        onChange={onChangeHandler} />\r\n                </div> \r\n                    <br/>\r\n                <div className={styles.buttonRow}>\r\n                    <button \r\n                        type=\"submit\" \r\n                        name =\"roomButton\" \r\n                        value=\"enterRoom\" \r\n                        className={styles.prettyBtn}>\r\n                            Enter Room\r\n                    </button>\r\n                    <button \r\n                        type=\"submit\" \r\n                        name =\"roomButton\" \r\n                        value=\"createRoom\" \r\n                        className={styles.prettyBtn}>\r\n                            Create Room\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userName: state.userName,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Lobby);\r\n","import React from 'react';\r\nimport { Router } from '@reach/router';\r\nimport { connect } from 'react-redux';\r\n\r\n// [ STYLES ]\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// [ VIEWS ]\r\nimport LoginReg from './views/LoginReg'; // fix later\r\nimport GameRoom from './views/GameRoom';\r\nimport Lobby from './views/Lobby';\r\n\r\n//[BOOtSTRAP]\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction MiniGameApp({ dispatch }) {\r\n\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Lobby path=\"/\" />\r\n        <GameRoom path=\"/:roomName/*\" />\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n      // userName: state.userName,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MiniGameApp);\r\n","const rootReducer = ( state, action ) => {\r\n    switch(action.type) {\r\n        case 'SETSOCKET':\r\n            return {\r\n            ...state,\r\n            socket: action.socket\r\n            };\r\n        case 'SETADMIN':\r\n            return {\r\n                ...state,\r\n                admin: action.admin\r\n            };\r\n        case 'SETROOMNAME':\r\n            return {\r\n                ...state,\r\n                roomName: action.roomName,\r\n            };\r\n        case 'SETGAMENAME':\r\n            return{\r\n                ...state,\r\n                gameName : action.gameName,\r\n            };\r\n        case 'SETUSERNAME':\r\n            return {\r\n            ...state,\r\n            userName: action.userName,\r\n            };\r\n        case 'SETSCOREBOARD':\r\n            return{\r\n                ...state,\r\n                scoreboard : action.scoreboard,\r\n                userList: action.userList,\r\n                scoreList: action.scoreList\r\n            };\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                socket: null,\r\n                userName: null,\r\n                roomName: null,\r\n                gameName: null,\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './root-reducer';\r\n\r\nconst initialState = {\r\n    socket: null,\r\n    roomName: null,\r\n    admin: null,\r\n    userName: null,\r\n    gameName : null,\r\n};\r\n\r\nconst store = createStore( rootReducer, initialState );\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport store from '../src/redux/store';\r\n\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('minigameapp')\r\n);\r\n\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"entirePage\":\"Games_entirePage__1cnte\",\"flexColCen\":\"Games_flexColCen__39eYA\",\"flexRowCen\":\"Games_flexRowCen__2XsI6\",\"onlyDiv\":\"Games_onlyDiv__h4Cq2\",\"gameComponent\":\"Games_gameComponent__1dDdz\",\"textRed\":\"Games_textRed__33dc2\",\"textWhite\":\"Games_textWhite__2rsfO\",\"gameBtn\":\"Games_gameBtn__3tgiA\",\"buttonMsg\":\"Games_buttonMsg__gN0yM\",\"focus\":\"Games_focus__2y6pc\",\"activeBtn\":\"Games_activeBtn__1EOdD\",\"inactiveBtn\":\"Games_inactiveBtn__7L0zO\",\"createBtn\":\"Games_createBtn__1zq-V\",\"hiddenForm\":\"Games_hiddenForm__s_VAT\",\"visibleForm\":\"Games_visibleForm__1xiGu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatComponent\":\"Chat_chatComponent__1WldI\",\"chatBox\":\"Chat_chatBox__Y5YCr\",\"chatLogMsgs\":\"Chat_chatLogMsgs__3xJBU\",\"chatFormBox\":\"Chat_chatFormBox__3uJYu\",\"inputMsg\":\"Chat_inputMsg__38Ah3\",\"msgLog\":\"Chat_msgLog__1OGkj\",\"message\":\"Chat_message__2W5D0\",\"recievedMessage\":\"Chat_recievedMessage__3Ur7C\",\"sentMessage\":\"Chat_sentMessage__Np0Yf\",\"container\":\"Chat_container__7z5hS\",\"buttonMsg\":\"Chat_buttonMsg__19Sri\",\"focus\":\"Chat_focus__zdCyw\",\"buttonReset\":\"Chat_buttonReset__1KgDu\",\"user\":\"Chat_user__3HVhS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"entirePage\":\"LoginReg_entirePage__2n3EE\",\"loginReg\":\"LoginReg_loginReg__IzJXY\",\"hidden\":\"LoginReg_hidden__p1j6C\",\"regform\":\"LoginReg_regform__28i1v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexColCen\":\"Views_flexColCen__mzneq\",\"flexRowCen\":\"Views_flexRowCen__3YTGs\",\"contentRow\":\"Views_contentRow__m3-vG\",\"onlyDiv\":\"Views_onlyDiv__1DMrm\",\"textWhite\":\"Views_textWhite__2ZAQU\",\"textRed\":\"Views_textRed__1IfLO\",\"btn\":\"Views_btn__35cjE\",\"buttonMsg\":\"Views_buttonMsg__1Leqh\",\"focus\":\"Views_focus__2OPqs\",\"activeBtn\":\"Views_activeBtn__1T9f1\",\"inactiveBtn\":\"Views_inactiveBtn__oRts5\",\"prettyBtn\":\"Views_prettyBtn__26K0t\",\"inputRow\":\"Views_inputRow__3tMPp\",\"buttonRow\":\"Views_buttonRow__3nuYP\"};"],"sourceRoot":""}